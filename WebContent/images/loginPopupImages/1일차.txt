** 1일차 **

sqlplus/nolog
conn sys as sysdba
=> 1234

* user 생성
create user kosta152 identified by 1234;
grant connect, resource, dba to kosta127;
conn kosta152/1234

* hr계정 unlock
conn /as sysdba
alter user identified by hr account unlock;
conn hr/hr
select * from tab;

*scott계정 불러오기
conn system/1234  => conn /as sysdba
@C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin\scott.sql
alter user scott identified by tiger;
conn scott/tiger
select * from tab;

conn kosta152/1234
sql 파일로드 => @J:\oracle_exam2
select * from tab;

-테이블 목록 불러오기
-> select * from tab;

-테이블 구조 불오기
-> DESC 테이블명

- SELECT 쿼리문 구조
-> SELECT 컬럼들 FORM 테이블명
	WHERE 조건내용
	GROUP BY 그룹조건
	ORDER BY 정렬기준

- employees 테이블의 전체 데이터를 불러오기
- SELECT * FROM employees;

퀴즈>HR계정에서 employees테이블 employee_id, last_name 컬럼에
	대한 모든 데이터를 출력하라.

-> SELECT employee_id, last_name FROM employees;

- 별칭 AS, ""
-> SELECT employee_id AS 사원번호, last_name "성"
	FROM employees;

- 중복되는 데이터 제거
-> SELECT DISTINCT job_id FROM employees;

<mission kosta152>
1. 각 학생의 평점을 검색하라.(학번, 이름, 학점) : student -> 별칭사용
  -> SELECT sno "학번", sname "이름", avr "학점" FROM student;
	
2. 각 과목의 학점을 검색하라.(과목번호, 과목명, 학점수) : course ->별칭
  -> SELECT cno "과목번호", cname "과목명", st_num "학점수" 
	FROM course;

3. 각 교수의 직위를 검색하라.(교수번호, 교수이름, 직위) : professor ->별칭
  -> SELECT pno "교수번호", pname "교수이름", orders "직위"
	FROM professor;

4. 급여를 10% 인상했을 때 각 직원마다 연간 지급되는 급여를 검색하라.: emp
     (사원번호, 사원이름, 연봉)
  -> SELECT eno "사원번호", ename "사원이름", sal*12*1.1 "연봉"
	FROM emp;

5. 현재 학생의 평점은 4.0 만점이다. 이를 4.5만점으로 환산해서 검색하라.: student
     (학번, 이름, 환산학점)
  -> SELECT sno "학번", sname "이름", avr*4.5/4.0 "환산학점"
	FROM student;

* 정렬 묶음 검색(ORDER BY 절)
-> SELECT eno, ename, sal FROM emp
	ORDER BY sal DESC, eno

퀴즈> 각 학과별로 교수의 정보를 부임일자 순으로 검색하라.
	
   -> SELECT section, pname, hiredate FROM professor
	ORDER BY section, hiredate;

* 조건에 맞는 일부데이터 불러오기 (WHERE 절)

-> SELECT employee_id, last_name, hire_date
	FROM employees
	WHERE last_name = 'King';

퀴즈> 입사일이 2003년 이후에 입사한 사원의 정보를 검색하라.

-> SELECT employee_id, last_name, hire_date
	FROM employees
	WHERE hire_date >= '03/01/01'
	ORDER BY hire_date;

퀴즈> 연봉 5000 ~ 10000불 사이의 직원들 내역을 출력하라. (AND)

 -> SELECT employee_id, last_name, salary
	FROM employees
	WHERE salary >= 5000 AND salary <=10000;	

- BETWEEN AND 연산자

-> SELECT employee_id, last_name, salary
	FROM employees
	WHERE salary BETWEEN 5000 AND 10000;

- OR 연산자

-> SELECT employee_id, last_name, job_id
	FROM employees
	WHERE job_id = 'FI_MGR' OR job_id='FI_ACCOUNT';

- IN 연산자

-> SELECT employee_id, last_name, job_id
	FROM employees
	WHERE job_id IN('FI_MGR', 'FI_ACCOUNT')

<mission kosta152>
1. 2,3학년 학생 중에서 학점이 2.0에서 3.0사이의 학생을 검색하라.
 -> SELECT * FROM student
	WHERE syear IN(2,3)
	AND avr BETWEEN 2.0 AND 3.0;

2. 화학, 물리학과 학생중에 1,2학년 학생을 성적 순으로 검색하라.
 -> SELECT * FROM student
	WHERE major IN('화학', '물리')
	AND syear IN(1,2)
	ORDER BY avr DESC;

3. 화학과 정교수를 검색하라.
-> SELECT * FROM professor
	WHERE section = '화학'
	AND orders = '정교수';

- NOT연산자

-> SELECT department_id, department_name
	FROM departments
	WHERE NOT department_id = 10;

-> SELECT department_id, department_name
	FROM departments
	WHERE  department_id <> 10;

- IS NOT NULL 연산자

-> SELECT employee_id, last_name, commission_pct
	FROM employees
	WHERE commission_pct IS NOT NULL;

- LIKE 연산자

'김%' => '김'으로 시작하는 모든 문자열 예)김길동, 김박사
'%과' => '과'로 끝나는 모든 문자열 예) 화학과, 인사과
'%김% => '김'이란 문자를 포함한 모든 문자열 예)김씨, 돌김, 삼각김밥
'화_' => '화'로 시작하는 2글자 단어 예) 화약, 화학
'_등_' => '등'이 가운데 들어간 3글자 단어 예)고등어, 꽃등심

- 07년도 입사한 사원의 목록을 출력하라.

-> SELECT employee_id, last_name, hire_date
	FROM employees
	WHERE hire_date BETWEEN '07/1/1'
	AND '07/12/31';

-> SELECT employee_id, last_name, hire_date
	FROM employees
	WHERE hire_date LIKE '07%';

퀴즈> last_name에 'a'가 들어가지 않는 사람을 출력하라.

SELECT employee_id, last_name, hire_date
	FROM employees
	WHERE last_name NOT LIKE '%a%';

<mission kosta152>

1. 화학과 학생 중에 성이 '관'씨인 학생을 검색하라.
 -> SELECT * FROM student
	WHERE major='화학' AND sname LIKE '관%';	

2. 부임일이 1995년 이전의 정교수를 검색하라.
 -> SELECT * FROM professor
	WHERE hiredate < '1995/1/1'
	AND orders = '정교수';

3. 성과 이름이 각각 한글자인 교수를 검색하라.
 -> SELECT * FROM professor
	WHERE pname LIKE '__';

4. 화학과 학생 중에 4.5환산 학점이 3.5이상인 학생을 검색하라.
 -> SELECT * FROM student
	WHERE major= '화학'
	AND avr*4.5/4.0 >= 3.5;

5. 화학과 이외 학과 학생의 평점을 각 학과별 그리고 학년별 순서로 검색하라.
 -> SELECT * FROM student
	WHERE major != '화학'
	ORDER BY major, syear;

* 그룹함수

 - sum()
 -> SELECT sum(salary) FROM employees; 

 - avg()
 -> SELECT avg(salary) FROM employees;

 - max() 
 -> SELECT max(salary) FROM employees;

 - count()
 -> SELECT count(salary) FROM employees;

* GROUP BY절

 - 부서별 평균 급여를 검색하라.
 -> SELECT department_id, avg(salary)
	FROM employees
	GROUP BY department_id
	ORDER BY department_id;

퀴즈> 부서별로 사원의 수와 커미션을 받는 사람의 수를 검색하라.

-> SELECT department_id, count(*), count(commission_pct)
	FROM employees
	GROUP BY department_id
	ORDER BY department_id;

<mission kosta 152>

1. 화학과 학년별 평균 학점을 검색하라.
-> SELECT syear , avg(avr)
	FROM student
	WHERE major = '화학'
	GROUP BY syear;

2. 각 학과별 학생수를 검색하라.
-> SELECT major, count(*)
	FROM student
	GROUP BY major;

3. 화학과 생물학과 학생을 4.5환산 평점의 평균을 각각 검색하라.
-> SELECT major, avg(avr * 4.5/4.0)
	FROM student
	WHERE major IN('화학', '생물')
	GROUP BY major;







